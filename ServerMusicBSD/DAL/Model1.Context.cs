//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MusicOnlineEntities : DbContext
    {
        public MusicOnlineEntities()
            : base("name=MusicOnlineEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AlbumsTBL> AlbumsTBL { get; set; }
        public virtual DbSet<ArticlesTBL> ArticlesTBL { get; set; }
        public virtual DbSet<ArtistsTBL> ArtistsTBL { get; set; }
        public virtual DbSet<ArtistsToSongsTBL> ArtistsToSongsTBL { get; set; }
        public virtual DbSet<JobTBL> JobTBL { get; set; }
        public virtual DbSet<PlaylistsSystemTBL> PlaylistsSystemTBL { get; set; }
        public virtual DbSet<PlaylistsTBL> PlaylistsTBL { get; set; }
        public virtual DbSet<ReportsTBL> ReportsTBL { get; set; }
        public virtual DbSet<ResponsesToArticlesTBL> ResponsesToArticlesTBL { get; set; }
        public virtual DbSet<ResponsesToSongsTBL> ResponsesToSongsTBL { get; set; }
        public virtual DbSet<SearchingToSingerTBL> SearchingToSingerTBL { get; set; }
        public virtual DbSet<SingerSearchingToUserTBL> SingerSearchingToUserTBL { get; set; }
        public virtual DbSet<SingersTBL> SingersTBL { get; set; }
        public virtual DbSet<SongsTBL> SongsTBL { get; set; }
        public virtual DbSet<SongsToPlaylistsTBL> SongsToPlaylistsTBL { get; set; }
        public virtual DbSet<TagsTBL> TagsTBL { get; set; }
        public virtual DbSet<TagsToArticlesTBL> TagsToArticlesTBL { get; set; }
        public virtual DbSet<TagsToSongsTBL> TagsToSongsTBL { get; set; }
        public virtual DbSet<TagsTypesTBL> TagsTypesTBL { get; set; }
        public virtual DbSet<UsersTBL> UsersTBL { get; set; }
        public virtual DbSet<LastResponses> LastResponses { get; set; }
        public virtual DbSet<similarSongs> similarSongs { get; set; }
    
        [DbFunction("MusicOnlineEntities", "getPlaylists")]
        public virtual IQueryable<getPlaylists_Result> getPlaylists(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getPlaylists_Result>("[MusicOnlineEntities].[getPlaylists](@userId)", userIdParameter);
        }
    
        [DbFunction("MusicOnlineEntities", "getSongs")]
        public virtual IQueryable<getSongs_Result> getSongs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSongs_Result>("[MusicOnlineEntities].[getSongs]()");
        }
    
        [DbFunction("MusicOnlineEntities", "searchByAlbum")]
        public virtual IQueryable<searchByAlbum_Result> searchByAlbum(string albumName)
        {
            var albumNameParameter = albumName != null ?
                new ObjectParameter("albumName", albumName) :
                new ObjectParameter("albumName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<searchByAlbum_Result>("[MusicOnlineEntities].[searchByAlbum](@albumName)", albumNameParameter);
        }
    
        [DbFunction("MusicOnlineEntities", "searchBySinger")]
        public virtual IQueryable<searchBySinger_Result> searchBySinger(string singerName)
        {
            var singerNameParameter = singerName != null ?
                new ObjectParameter("singerName", singerName) :
                new ObjectParameter("singerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<searchBySinger_Result>("[MusicOnlineEntities].[searchBySinger](@singerName)", singerNameParameter);
        }
    }
}
